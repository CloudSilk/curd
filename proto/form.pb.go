// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.20.3
// source: form.proto

package curd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FormInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name      string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	PageName  string         `protobuf:"bytes,3,opt,name=pageName,proto3" json:"pageName"`
	Group     string         `protobuf:"bytes,4,opt,name=group,proto3" json:"group"`
	Schema    string         `protobuf:"bytes,5,opt,name=schema,proto3" json:"schema"`
	Versions  []*FormVersion `protobuf:"bytes,6,rep,name=versions,proto3" json:"versions"`
	CreatedAt int64          `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt"`
	UpdatedAt int64          `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt"`
	TenantID  string         `protobuf:"bytes,9,opt,name=tenantID,proto3" json:"tenantID"`
	Type      string         `protobuf:"bytes,10,opt,name=type,proto3" json:"type"`
	Public    bool           `protobuf:"varint,11,opt,name=public,proto3" json:"public"`
	Subform   bool           `protobuf:"varint,12,opt,name=subform,proto3" json:"subform"`
	ProjectID string         `protobuf:"bytes,13,opt,name=projectID,proto3" json:"projectID"`
	//系统必须要有的数据
	IsMust bool `protobuf:"varint,14,opt,name=isMust,proto3" json:"isMust"`
}

func (x *FormInfo) Reset() {
	*x = FormInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_form_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormInfo) ProtoMessage() {}

func (x *FormInfo) ProtoReflect() protoreflect.Message {
	mi := &file_form_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormInfo.ProtoReflect.Descriptor instead.
func (*FormInfo) Descriptor() ([]byte, []int) {
	return file_form_proto_rawDescGZIP(), []int{0}
}

func (x *FormInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FormInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FormInfo) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *FormInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FormInfo) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *FormInfo) GetVersions() []*FormVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *FormInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FormInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *FormInfo) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *FormInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FormInfo) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *FormInfo) GetSubform() bool {
	if x != nil {
		return x.Subform
	}
	return false
}

func (x *FormInfo) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *FormInfo) GetIsMust() bool {
	if x != nil {
		return x.IsMust
	}
	return false
}

type FormVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	FormID      string `protobuf:"bytes,2,opt,name=formID,proto3" json:"formID"`
	Version     string `protobuf:"bytes,3,opt,name=version,proto3" json:"version"`
	Schema      string `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
	CreatedAt   string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt"`
}

func (x *FormVersion) Reset() {
	*x = FormVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_form_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormVersion) ProtoMessage() {}

func (x *FormVersion) ProtoReflect() protoreflect.Message {
	mi := &file_form_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormVersion.ProtoReflect.Descriptor instead.
func (*FormVersion) Descriptor() ([]byte, []int) {
	return file_form_proto_rawDescGZIP(), []int{1}
}

func (x *FormVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FormVersion) GetFormID() string {
	if x != nil {
		return x.FormID
	}
	return ""
}

func (x *FormVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FormVersion) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *FormVersion) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FormVersion) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type QueryFormRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"pageIndex" form:"pageIndex"
	PageIndex int64 `protobuf:"varint,1,opt,name=pageIndex,proto3" json:"pageIndex" uri:"pageIndex" form:"pageIndex"`
	// @inject_tag: uri:"pageSize" form:"pageSize"
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize" uri:"pageSize" form:"pageSize"`
	// @inject_tag: uri:"orderField" form:"orderField"
	OrderField string `protobuf:"bytes,3,opt,name=orderField,proto3" json:"orderField" uri:"orderField" form:"orderField"`
	// @inject_tag: uri:"desc" form:"desc"
	Desc bool `protobuf:"varint,4,opt,name=desc,proto3" json:"desc" uri:"desc" form:"desc"`
	// @inject_tag: uri:"name" form:"name"
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name" uri:"name" form:"name"`
	// @inject_tag: uri:"pageName" form:"pageName"
	PageName string `protobuf:"bytes,6,opt,name=pageName,proto3" json:"pageName" uri:"pageName" form:"pageName"`
	// @inject_tag: uri:"group" form:"group"
	Group string `protobuf:"bytes,7,opt,name=group,proto3" json:"group" uri:"group" form:"group"`
	// @inject_tag: uri:"ids" form:"ids"
	Ids []string `protobuf:"bytes,8,rep,name=ids,proto3" json:"ids" uri:"ids" form:"ids"`
	// @inject_tag: uri:"type" form:"type"
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type" uri:"type" form:"type"`
	// @inject_tag: uri:"public" form:"public"
	Public int32 `protobuf:"varint,11,opt,name=public,proto3" json:"public" uri:"public" form:"public"`
	// @inject_tag: uri:"tenantID" form:"tenantID"
	TenantID string `protobuf:"bytes,12,opt,name=tenantID,proto3" json:"tenantID" uri:"tenantID" form:"tenantID"`
	// @inject_tag: uri:"subform" form:"subform"
	Subform int32 `protobuf:"varint,13,opt,name=subform,proto3" json:"subform" uri:"subform" form:"subform"`
	// @inject_tag: uri:"projectID" form:"projectID"
	ProjectID string `protobuf:"bytes,14,opt,name=projectID,proto3" json:"projectID" uri:"projectID" form:"projectID"`
	// 包含基础表单数据,例如用户管理、角色管理等
	// @inject_tag: uri:"inclusiveBasic" form:"inclusiveBasic"
	InclusiveBasic bool `protobuf:"varint,15,opt,name=inclusiveBasic,proto3" json:"inclusiveBasic" uri:"inclusiveBasic" form:"inclusiveBasic"`
}

func (x *QueryFormRequest) Reset() {
	*x = QueryFormRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_form_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFormRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFormRequest) ProtoMessage() {}

func (x *QueryFormRequest) ProtoReflect() protoreflect.Message {
	mi := &file_form_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFormRequest.ProtoReflect.Descriptor instead.
func (*QueryFormRequest) Descriptor() ([]byte, []int) {
	return file_form_proto_rawDescGZIP(), []int{2}
}

func (x *QueryFormRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *QueryFormRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryFormRequest) GetOrderField() string {
	if x != nil {
		return x.OrderField
	}
	return ""
}

func (x *QueryFormRequest) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

func (x *QueryFormRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryFormRequest) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *QueryFormRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *QueryFormRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *QueryFormRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QueryFormRequest) GetPublic() int32 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *QueryFormRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *QueryFormRequest) GetSubform() int32 {
	if x != nil {
		return x.Subform
	}
	return 0
}

func (x *QueryFormRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *QueryFormRequest) GetInclusiveBasic() bool {
	if x != nil {
		return x.InclusiveBasic
	}
	return false
}

type QueryFormResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code        `protobuf:"varint,1,opt,name=code,proto3,enum=curd.Code" json:"code"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*FormInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
	Pages   int64       `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	Records int64       `protobuf:"varint,5,opt,name=records,proto3" json:"records"`
	Total   int64       `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
}

func (x *QueryFormResponse) Reset() {
	*x = QueryFormResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_form_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFormResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFormResponse) ProtoMessage() {}

func (x *QueryFormResponse) ProtoReflect() protoreflect.Message {
	mi := &file_form_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFormResponse.ProtoReflect.Descriptor instead.
func (*QueryFormResponse) Descriptor() ([]byte, []int) {
	return file_form_proto_rawDescGZIP(), []int{3}
}

func (x *QueryFormResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *QueryFormResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryFormResponse) GetData() []*FormInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryFormResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *QueryFormResponse) GetRecords() int64 {
	if x != nil {
		return x.Records
	}
	return 0
}

func (x *QueryFormResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllFormResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code        `protobuf:"varint,1,opt,name=code,proto3,enum=curd.Code" json:"code"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    []*FormInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetAllFormResponse) Reset() {
	*x = GetAllFormResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_form_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFormResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFormResponse) ProtoMessage() {}

func (x *GetAllFormResponse) ProtoReflect() protoreflect.Message {
	mi := &file_form_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFormResponse.ProtoReflect.Descriptor instead.
func (*GetAllFormResponse) Descriptor() ([]byte, []int) {
	return file_form_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllFormResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetAllFormResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllFormResponse) GetData() []*FormInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetFormDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code      `protobuf:"varint,1,opt,name=code,proto3,enum=curd.Code" json:"code"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *FormInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetFormDetailResponse) Reset() {
	*x = GetFormDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_form_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFormDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFormDetailResponse) ProtoMessage() {}

func (x *GetFormDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_form_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFormDetailResponse.ProtoReflect.Descriptor instead.
func (*GetFormDetailResponse) Descriptor() ([]byte, []int) {
	return file_form_proto_rawDescGZIP(), []int{5}
}

func (x *GetFormDetailResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetFormDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetFormDetailResponse) GetData() *FormInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code         `protobuf:"varint,1,opt,name=code,proto3,enum=curd.Code" json:"code"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *FormVersion `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_form_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_form_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_form_proto_rawDescGZIP(), []int{6}
}

func (x *GetVersionResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_None
}

func (x *GetVersionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetVersionResponse) GetData() *FormVersion {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetFormDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"id" form:"id"
	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id" form:"id"`
	TenantID          string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID"`
	ContainerVersions bool   `protobuf:"varint,3,opt,name=containerVersions,proto3" json:"containerVersions"`
}

func (x *GetFormDetailRequest) Reset() {
	*x = GetFormDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_form_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFormDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFormDetailRequest) ProtoMessage() {}

func (x *GetFormDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_form_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFormDetailRequest.ProtoReflect.Descriptor instead.
func (*GetFormDetailRequest) Descriptor() ([]byte, []int) {
	return file_form_proto_rawDescGZIP(), []int{7}
}

func (x *GetFormDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFormDetailRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *GetFormDetailRequest) GetContainerVersions() bool {
	if x != nil {
		return x.ContainerVersions
	}
	return false
}

type GetAllFormRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: uri:"subform" form:"subform"
	Subform int32 `protobuf:"varint,1,opt,name=subform,proto3" json:"subform" uri:"subform" form:"subform"`
	// @inject_tag: uri:"tenantID" form:"tenantID"
	TenantID string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID" uri:"tenantID" form:"tenantID"`
	// @inject_tag: uri:"type" form:"type"
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type" uri:"type" form:"type"`
	// @inject_tag: uri:"public" form:"public"
	Public int32 `protobuf:"varint,4,opt,name=public,proto3" json:"public" uri:"public" form:"public"`
	// @inject_tag: uri:"projectID" form:"projectID"
	ProjectID string `protobuf:"bytes,5,opt,name=projectID,proto3" json:"projectID" uri:"projectID" form:"projectID"`
}

func (x *GetAllFormRequest) Reset() {
	*x = GetAllFormRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_form_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFormRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFormRequest) ProtoMessage() {}

func (x *GetAllFormRequest) ProtoReflect() protoreflect.Message {
	mi := &file_form_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFormRequest.ProtoReflect.Descriptor instead.
func (*GetAllFormRequest) Descriptor() ([]byte, []int) {
	return file_form_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllFormRequest) GetSubform() int32 {
	if x != nil {
		return x.Subform
	}
	return 0
}

func (x *GetAllFormRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *GetAllFormRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetAllFormRequest) GetPublic() int32 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *GetAllFormRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

var File_form_proto protoreflect.FileDescriptor

var file_form_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x75,
	0x72, 0x64, 0x1a, 0x11, 0x63, 0x75, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x02, 0x0a, 0x08, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x2d, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x62, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x4d, 0x75, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4d,
	0x75, 0x73, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x80, 0x03,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x76, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x22, 0xb7, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x72, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a,
	0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x63, 0x75, 0x72, 0x64,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x70, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x93,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x32, 0x95, 0x03, 0x0a, 0x04, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x2d, 0x0a,
	0x03, 0x41, 0x64, 0x64, 0x12, 0x0e, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x46, 0x6f,
	0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x75, 0x72,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3a, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x63, 0x75,
	0x72, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x13, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x63, 0x75, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2f, 0x0a, 0x0d,
	0x63, 0x6e, 0x2e, 0x61, 0x74, 0x61, 0x6c, 0x69, 0x2e, 0x63, 0x75, 0x72, 0x64, 0x42, 0x09, 0x46,
	0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x07, 0x2e, 0x2f, 0x3b, 0x63,
	0x75, 0x72, 0x64, 0xa2, 0x02, 0x07, 0x46, 0x4f, 0x52, 0x4d, 0x53, 0x52, 0x56, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_form_proto_rawDescOnce sync.Once
	file_form_proto_rawDescData = file_form_proto_rawDesc
)

func file_form_proto_rawDescGZIP() []byte {
	file_form_proto_rawDescOnce.Do(func() {
		file_form_proto_rawDescData = protoimpl.X.CompressGZIP(file_form_proto_rawDescData)
	})
	return file_form_proto_rawDescData
}

var file_form_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_form_proto_goTypes = []interface{}{
	(*FormInfo)(nil),              // 0: curd.FormInfo
	(*FormVersion)(nil),           // 1: curd.FormVersion
	(*QueryFormRequest)(nil),      // 2: curd.QueryFormRequest
	(*QueryFormResponse)(nil),     // 3: curd.QueryFormResponse
	(*GetAllFormResponse)(nil),    // 4: curd.GetAllFormResponse
	(*GetFormDetailResponse)(nil), // 5: curd.GetFormDetailResponse
	(*GetVersionResponse)(nil),    // 6: curd.GetVersionResponse
	(*GetFormDetailRequest)(nil),  // 7: curd.GetFormDetailRequest
	(*GetAllFormRequest)(nil),     // 8: curd.GetAllFormRequest
	(Code)(0),                     // 9: curd.Code
	(*DelRequest)(nil),            // 10: curd.DelRequest
	(*GetAllRequest)(nil),         // 11: curd.GetAllRequest
	(*CommonResponse)(nil),        // 12: curd.CommonResponse
}
var file_form_proto_depIdxs = []int32{
	1,  // 0: curd.FormInfo.versions:type_name -> curd.FormVersion
	9,  // 1: curd.QueryFormResponse.code:type_name -> curd.Code
	0,  // 2: curd.QueryFormResponse.data:type_name -> curd.FormInfo
	9,  // 3: curd.GetAllFormResponse.code:type_name -> curd.Code
	0,  // 4: curd.GetAllFormResponse.data:type_name -> curd.FormInfo
	9,  // 5: curd.GetFormDetailResponse.code:type_name -> curd.Code
	0,  // 6: curd.GetFormDetailResponse.data:type_name -> curd.FormInfo
	9,  // 7: curd.GetVersionResponse.code:type_name -> curd.Code
	1,  // 8: curd.GetVersionResponse.data:type_name -> curd.FormVersion
	0,  // 9: curd.Form.Add:input_type -> curd.FormInfo
	0,  // 10: curd.Form.Update:input_type -> curd.FormInfo
	10, // 11: curd.Form.Delete:input_type -> curd.DelRequest
	2,  // 12: curd.Form.Query:input_type -> curd.QueryFormRequest
	11, // 13: curd.Form.GetAll:input_type -> curd.GetAllRequest
	7,  // 14: curd.Form.GetDetail:input_type -> curd.GetFormDetailRequest
	10, // 15: curd.Form.GetVersion:input_type -> curd.DelRequest
	12, // 16: curd.Form.Add:output_type -> curd.CommonResponse
	12, // 17: curd.Form.Update:output_type -> curd.CommonResponse
	12, // 18: curd.Form.Delete:output_type -> curd.CommonResponse
	3,  // 19: curd.Form.Query:output_type -> curd.QueryFormResponse
	8,  // 20: curd.Form.GetAll:output_type -> curd.GetAllFormRequest
	5,  // 21: curd.Form.GetDetail:output_type -> curd.GetFormDetailResponse
	6,  // 22: curd.Form.GetVersion:output_type -> curd.GetVersionResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_form_proto_init() }
func file_form_proto_init() {
	if File_form_proto != nil {
		return
	}
	file_curd_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_form_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_form_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_form_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFormRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_form_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFormResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_form_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFormResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_form_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFormDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_form_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_form_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFormDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_form_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFormRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_form_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_form_proto_goTypes,
		DependencyIndexes: file_form_proto_depIdxs,
		MessageInfos:      file_form_proto_msgTypes,
	}.Build()
	File_form_proto = out.File
	file_form_proto_rawDesc = nil
	file_form_proto_goTypes = nil
	file_form_proto_depIdxs = nil
}
